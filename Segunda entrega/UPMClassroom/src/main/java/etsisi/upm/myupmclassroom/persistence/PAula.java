package etsisi.upm.myupmclassroom.persistence;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @MyUPMClassroom
//  @ Author : @CITSIM_22_03
//
//

import java.sql.*;
import java.util.*;
import etsisi.upm.myupmclassroom.modelo.*;

public class PAula implements IPAula {

	@Override
	public void insertAula(Aula aula) {
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			stmt.executeUpdate("INSERT INTO Aula (nombre_centro, superficie, aforo, tipo_aula) VALUES (" + 
					"'" + aula.getNombre_centro() + "'," +
					"'" + aula.getSuperficie() + "'," + 
					"'" + aula.getAforo() + "'," + 
					"'" + aula.getTAula() + "'" + 
					")");
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void deleteAula(int id) {
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			stmt.executeUpdate("DELETE FROM Aula WHERE id = '" + id + "'");
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public Aula selectAula(int id) {

		Aula aula = null;
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			ResultSet rs = stmt.executeQuery("select * from Aula where id = '" + id + "'");
			
			while (rs.next())
			{
				aula = new Aula(
						rs.getString("nombre_centro"),
						rs.getInt("superficie"),
						rs.getInt("aforo"),
						TAula.valueOf(rs.getString("tipo_aula").toUpperCase())
						);
				
				aula.setId(id);
			}
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return aula;
	}

	@Override
	public void updateAula(Aula aula) {
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			stmt.executeUpdate("UPDATE Aula SET " + 
					"nombre_centro = '" + aula.getNombre_centro() + "'," +
					"superficie = '" + aula.getSuperficie() + "'," +
					"aforo = '" + aula.getAforo() + "'," +
					"tipo_aula = '" + aula.getTAula() + "'" +
					" WHERE id ='" + aula.getID() + "'");
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public Collection<Aula> getAll() {
		
		LinkedList<Aula> aulalistout = new LinkedList<>();
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			ResultSet rs = stmt.executeQuery("select * from Aula");
			
			while (rs.next()) {
				aulalistout.add(new Aula(
						rs.getString("nombre_centro"),
						rs.getInt("superficie"),
						rs.getInt("aforo"),
						TAula.valueOf(rs.getString("tipo_aula").toUpperCase()))
						);
				
				aulalistout.getLast().setId(rs.getInt("id"));
			}
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return aulalistout;
	}
	
	@Override
	public Collection<Aula> getAulasSuscrito(String dni) {
		
		LinkedList<Aula> aulalistout = new LinkedList<>();
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			ResultSet rs = stmt.executeQuery("SELECT Aula.* FROM UsuarioSuscritoAula INNER JOIN Aula ON Aula.id = UsuarioSuscritoAula.idAula WHERE dni = '" + dni + "'");
			
			while (rs.next()) {
				aulalistout.add(new Aula(
						rs.getString("nombre_centro"),
						rs.getInt("superficie"),
						rs.getInt("aforo"),
						TAula.valueOf(rs.getString("tipo_aula").toUpperCase()))
						);
				
				aulalistout.getLast().setId(rs.getInt("id"));
			}
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return aulalistout;
	}
	
	@Override
	public Collection<Aula> getAulasNoSuscrito(String dni) {
		
		LinkedList<Aula> aulalistout = new LinkedList<>();
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			ResultSet rs = stmt.executeQuery("SELECT * FROM Aula WHERE id NOT IN (SELECT Aula.id FROM UsuarioSuscritoAula INNER JOIN Aula ON Aula.id = UsuarioSuscritoAula.idAula WHERE dni = '" + dni + "')");
			
			while (rs.next()) {
				aulalistout.add(new Aula(
						rs.getString("nombre_centro"),
						rs.getInt("superficie"),
						rs.getInt("aforo"),
						TAula.valueOf(rs.getString("tipo_aula").toUpperCase()))
						);
				
				aulalistout.getLast().setId(rs.getInt("id"));
			}
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return aulalistout;
	}
	
	@Override
	public void insertAulaSuscrita(int idAula, String dni) {
		Statement stmt;
		
		try {
			stmt = PersistenceManager.getInstance().getconnection().createStatement();
			
			stmt.executeUpdate("INSERT INTO UsuarioSuscritoAula (idAula, dni) VALUES (" +
					"'" + idAula + "'," +
					"'" + dni + "'" +
					")");
			
			stmt.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}